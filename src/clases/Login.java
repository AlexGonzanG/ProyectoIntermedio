package clases;

import java.sql.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Ingeniero Alexander Gonzalez Guayazan.
 */
public class Login extends javax.swing.JFrame {

    public Login() {
        initComponents();
        this.setTitle("Acceso al Sistema");
        this.setIconImage(new ImageIcon(getClass().getResource("/img/008.png")).getImage());
        this.setLocationRelativeTo(null);
        this.setResizable(false);
       
    }

    Conexion validarDatos = new Conexion();	
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_username = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        labelLogo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt_username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_usernameActionPerformed(evt);
            }
        });

        jButton1.setText("Acceder");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel1.setText("Creado por Ing. Alexander Gonzalez G.");

        labelLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/008.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelLogo)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(labelLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(40, 40, 40)
                .addComponent(jLabel1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Try catch para elmanejo de errores
        try {
            Conexion conex = new Conexion();
            conex.conexionBd();
            
            //Se realiza la consulta sql el ? 1del final indica que va el valor que ingrese el usuario
            PreparedStatement pst = conex.conexionBd().prepareStatement("select * from usuarios where username = ? AND password = ?");
            //PreparedStatement pst = conectar.prepareStatement("select * from usuarios where username = ? AND password = ?");
            //Se toma el valor que ingreso el usuario en el texfield y se le asigna 1 que es el primer ? igual 2 para el segundo ? que valida la consulta
            pst.setString(1, txt_username.getText().trim());
            pst.setString(2, String.valueOf(jPasswordField1.getPassword()));
            //ejecuta la consulta y almacena el resultado en el resultset variable rs
            ResultSet rs = pst.executeQuery();
            //Se recuperan los datos ingresados por el usuario en nuevas variables    
            username = txt_username.getText().trim();
            pass = String.valueOf(jPasswordField1.getPassword());
            //Valida que se ingresen valores en los campos
            if (username.equals("") || pass.equals("")) {
                JOptionPane.showMessageDialog(null, "No puedes dejar campos en blanco");
                //Valida si hay resultados de la consulta sql en la variable rs    
            } else if (rs.next()) {
                //Lo que encuentre en la columna tipo_nivel de la BD lo recupera en la variable tipoUasuario lo mismo con las demas columnas    
                tipoUser = rs.getString("tipo_nivel");
                nombre = rs.getString("nombre_usuario");
                status = rs.getString("status");
                //Valida si el usuario esta activo para permitir ingreso al sistema
                if (status.equals("Activo")) {
                    //Si esta activo aqui validara que tipo de usuario es Admin, capturista o tecnico y direcciona segun corresponda    
                    switch (tipoUser) {
                        case "Administrador":
                            InterfazAdmin Admin = new InterfazAdmin();
                            Admin.setVisible(true);
                            this.setVisible(false);

                            break;
                        case "Capturista":

                            InterfazCapturador Capturador = new InterfazCapturador();
                            Capturador.setVisible(true);
                            this.setVisible(false);
                            break;
                        //Si no es administrador ni capturista entonces es tecnico
                        default:
                            InterfazTecnico Tecnico = new InterfazTecnico();
                            Tecnico.setVisible(true);
                            this.setVisible(false);
                            break;
                    }
                    conex.conexionBd().close();
                    rs.close();
                    pst.getConnection().close();
                } else {
                    JOptionPane.showMessageDialog(null, "El usuario esta Inactivo contacte al administrador");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Usuario o Contrase√±a Invalidos");
            }
        } catch (SQLException e) {
            System.out.println("ERROR: " + e);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_usernameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Login().setVisible(true);
        });
    }
    
    public static String username;
    public static String nombre;
    public static String tipoUser;
    public static String status;
    private String pass;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JLabel labelLogo;
    public static javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
}
