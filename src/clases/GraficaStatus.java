/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clases;

import java.awt.Color;
import java.awt.Graphics;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Ingeniero Alexander Gonzalez.
 */
public class GraficaStatus extends javax.swing.JFrame {

    /**
     * Creates new form GraficaStatus
     */
    int nuevoIngreso, Entregado, NoReparado, Reparado, EnRevision;
    String status;
    boolean bandera = true;
    //int contador1=0, contador2=0, contador3=0, contador4=0, contador5=0;
    
    
    public GraficaStatus() {
        this.setIconImage(new ImageIcon(getClass().getResource("/img/Tecnico.jpg")).getImage());
        this.setTitle(Login.tipoUser + " - Sesion de " + Login.username);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        
        
    }
    
    
    public void datosConsultados(String tipoUser, String nombreUser) {
    try {
            Conexion conex = new Conexion();
            conex.conexionBd();
            PreparedStatement pst = conex.conexionBd().prepareStatement("select status from equipos" );
            
            ResultSet rs = pst.executeQuery();
            
            while(rs.next()){
             status = rs.getString("status");
             
            if(status.equals("Nuevo Ingreso"))
               nuevoIngreso++;
               
            else if(status.equals("No Reparado"))
                NoReparado++;
            else if (status.equals("Reparado"))
                Reparado++;
            else if (status.equals("Entregado"))
                Entregado++;
            else if (status.equals("En revision"))
                EnRevision++;
            else
                    System.out.println("Hay elementos sin status asignado");
                              
            }
            
            conex.conexionBd().close();
            rs.close();
            pst.getConnection().close();
            initComponents();
            this.setLocationRelativeTo(null);
                    
        } catch (SQLException e) {
            System.out.println("ERROR en la conexion a la BD" + e);
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("GRAFICA DE STATUS");

        jLabel3.setForeground(new java.awt.Color(255, 130, 0));
        jLabel3.setText("Cantidad: " + nuevoIngreso);

        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("Cantidad: " + NoReparado);

        jLabel7.setForeground(new java.awt.Color(0, 0, 255));
        jLabel7.setText("Cantidad: " + Reparado);

        jLabel9.setForeground(new java.awt.Color(130, 0, 255));
        jLabel9.setText("Cantidad: " + Entregado);

        jLabel11.setForeground(new java.awt.Color(0, 130, 0));
        jLabel11.setText("Cantidad: " +EnRevision);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel12.setText("Creado por Ing. Alexander Gonzalez G.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(130, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(126, 126, 126))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(51, 51, 51)
                .addComponent(jLabel3)
                .addGap(34, 34, 34)
                .addComponent(jLabel5)
                .addGap(35, 35, 35)
                .addComponent(jLabel7)
                .addGap(35, 35, 35)
                .addComponent(jLabel9)
                .addGap(35, 35, 35)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GraficaStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GraficaStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GraficaStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GraficaStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GraficaStatus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables

public int MayorValor(int newIngreso, int NotReparado, int yesReparado, int esEntregado, int InRevision){
            
             if(newIngreso > NotReparado && newIngreso > yesReparado && newIngreso > 
                esEntregado && newIngreso > InRevision){
            return newIngreso;
        }else if(NotReparado > yesReparado && NotReparado > esEntregado && NoReparado > InRevision){
            return NotReparado;
        }else if(yesReparado > esEntregado && yesReparado > InRevision) {
            return yesReparado;
        }else if(esEntregado > InRevision){
            return esEntregado;
        }else{
            return InRevision;
    }
}

    
public void paint(Graphics g){
            super.paint(g);
            
            int valor_mayor = MayorValor(nuevoIngreso, NoReparado, Reparado, Entregado, EnRevision);
            
            if(bandera == true && valor_mayor != 0){
                try{
                int largo_NuevoIngreso = nuevoIngreso * 400 / valor_mayor;
                int largo_NoReparado = NoReparado * 400 / valor_mayor;
                int largo_Reparado = Reparado * 400 / valor_mayor;
                int largo_entregado = Entregado * 400 / valor_mayor;
                int largo_EnRevision = EnRevision * 400 / valor_mayor;
                              
                g.setColor(new Color(255,130,0));
                g.fillRect(100, 100, largo_NuevoIngreso, 40);
                g.drawString("Nuevo Ingreso", 10, 125);

                g.setColor(new Color(255,0,0));
                g.fillRect(100, 150, largo_NoReparado, 40);
                g.drawString("No Reparado", 10, 175);

                g.setColor(new Color(0,0,255));
                g.fillRect(100, 200, largo_Reparado, 40);
                g.drawString("Reparado", 10, 225);
                
                g.setColor(new Color(64,0,130));
                g.fillRect(100, 250, largo_entregado, 40);
                g.drawString("Entregado", 10, 275);
                
                g.setColor(new Color(0,130,0));
                g.fillRect(100, 300, largo_EnRevision, 40);
                g.drawString("En Revision", 10, 325);
                
                }catch(ArithmeticException ep){
                    ep.printStackTrace();
                }
            } else {
                 JOptionPane.showMessageDialog(null, "No hay Equipos Registrados");
            }
        }
    }






